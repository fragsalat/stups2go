Description: Go Continuous Delivery Agent ({{Arguments.DockerImage}})
SenzaInfo:
  StackName: go-agent
  Parameters:
  - DockerImage:
      Description: go-agent Docker image to use.
  - GoServerDomain:
      Description: go-server https endpoint.
  - GoAgentRegistrationKey:
      Description: go-server key for auto registration for agents.
  - GoAgentEnvironments:
      Description: Comma separated list of environments this agent supports.
  - GoAgentCount:
      Description: Count of go-agent's to run in parallel.
  - InstanceType:
      Description: AWS instance type of your go-server.
  - ApplicationId:
      Description: ID of the registered application to use for robot access.
  - AccessTokenUrl:
      Description: URL of your OAuth2 access_token endpoint.
  - MintBucket:
      Description: Name of the application's mint bucket.
  - Files:
      Description: Comma separated list of <file>:<base64 content> tuples.
      Default: ""
  - ScalyrKey:
      Description: Optional key for scalyr logging.
      Default: ""
  - LogentriesKey:
      Description: Optional key for logentries logging.
      Default: ""
  - AppdynamicsApplication:
      Description: Optional AppDynamics application name.
      Default: ""

SenzaComponents:
- Configuration:
    Type: Senza::StupsAutoConfiguration

Resources:
  GoAgentAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        "Fn::FindInMap":
        - "ServerSubnets"
        - Ref: "AWS::Region"
        - "Subnets"
      LaunchConfigurationName:
        Ref: "GoAgentLaunchConfig"
      MinSize: 1
      DesiredCapacity: "{{Arguments.GoAgentCount}}"
      MaxSize: "{{Arguments.GoAgentCount}}"

  GoAgentLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      UserData:
        "Fn::Base64":
          "Fn::Join":
          - "\n"
          - - "#taupage-ami-config"
            - "application_id: {{Arguments.ApplicationId}}"
            - "application_version: {{SenzaInfo.StackVersion}}"
            - "runtime: Docker"
            - "source: '{{Arguments.DockerImage}}'"
            - "root: true"
            - "docker_daemon_access: true"
            - "mint_bucket: {{Arguments.MintBucket}}"
            - "{{#Arguments.ScalyrKey}}scalyr_account_key: '{{Arguments.ScalyrKey}}'{{/Arguments.ScalyrKey}}"
            - "{{#Arguments.LogentriesKey}}logentries_account_key: '{{Arguments.LogentriesKey}}'{{/Arguments.LogentriesKey}}"
            - "{{#Arguments.AppdynamicsApplication}}appdynamics_application: '{{Arguments.AppdynamicsAplication}}'{{/Arguments.AppdynamicsApplication}}"
            - "environment:"
            - "  STUPS_GO_SERVER_DOMAIN: '{{Arguments.GoServerDomain}}'"
            - "  STUPS_GO_AGENT_REGISTRATION_KEY: '{{Arguments.GoAgentRegistrationKey}}'"
            - "  STUPS_GO_AGENT_ENVIRONMENTS: '{{Arguments.GoAgentEnvironments}}'"
            - "  STUPS_FILES: '{{Arguments.Files}}'"
            - "  OAUTH2_ACCESS_TOKEN_URL: '{{Arguments.AccessTokenUrl}}?realm=/services'"
      ImageId:
        "Fn::FindInMap":
        - "Images"
        - Ref: "AWS::Region"
        - "LatestTaupageImage"
      InstanceType: "{{Arguments.InstanceType}}"
      IamInstanceProfile:
        Ref: GoAgentProfile
      SecurityGroups:
      - "Fn::GetAtt":
        - "GoAgentSecurityGroup"
        - "GroupId"
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          VolumeSize: 100

  GoAgentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: go-agent security group
      SecurityGroupIngress:
      # for debugging via piu
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      # Prometheus monitoring
      - IpProtocol: tcp
        FromPort: 9100
        ToPort: 9100
        CidrIp: 0.0.0.0/0

  GoAgentProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
      - Ref: GoAgentRole

  GoAgentRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - "sts:AssumeRole"
      Policies:
      - PolicyName: GoAgentPowerUser
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Deny"
              Action:
                - "ec2:*"
              Resource: "*"
              Condition:
                StringNotLike:
                  ec2:Region:
                    - "eu-west-1"
                    - "eu-central-1"
            -
              Effect: "Deny"
              Action:
                - "iam:*"
              Resource: "arn:aws:iam::*:role/Shibboleth*"
            -
              Effect: "Deny"
              Action:
                - "ec2:DeleteNetworkAcl"
                - "ec2:DeleteRoute"
                - "ec2:DeleteRouteTable"
                - "ec2:DeleteSubnet"
                - "ec2:DeleteVpc"
                - "ec2:DeleteVpcPeeringConnection"
                - "ec2:DeleteVpnConnection"
                - "ec2:DeleteVpnConnectionRoute"
                - "ec2:DeleteVpnGateway"
                - "ec2:CreateNetworkAcl"
                - "ec2:CreateRoute"
                - "ec2:CreateRouteTable"
                - "ec2:CreateSubnet"
                - "ec2:CreateVpc"
                - "ec2:CreateVpcPeeringConnection"
                - "ec2:CreateVpnConnection"
                - "ec2:CreateVpnConnectionRoute"
                - "ec2:CreateVpnGateway"
                - "iam:AddUserToGroup"
                - "iam:AddClientIDToOpenIDConnectProvider"
                - "iam:AttachGroupPolicy"
                - "iam:AttachUserPolicy"
                - "iam:ChangePassword"
                - "iam:CreateAccessKey"
                - "iam:CreateAccountAlias"
                - "iam:CreateGroup"
                - "iam:CreateLoginProfile"
                - "iam:CreateOpenIDConnectProvider"
                - "iam:CreateSAMLProvider"
                - "iam:CreateUser"
                - "iam:CreateVirtualMFADevice"
                - "iam:DeactivateMFADevice"
                - "iam:DeleteAccessKey"
                - "iam:DeleteAccountAlias"
                - "iam:DeleteAccountPasswordPolicy"
                - "iam:DeleteGroup"
                - "iam:DeleteGroupPolicy"
                - "iam:DeleteLoginProfile"
                - "iam:DeleteOpenIDConnectProvider"
                - "iam:DeletePolicy"
                - "iam:DeletePolicyVersion"
                - "iam:DeleteSAMLProvider"
                - "iam:DeleteSSHPublicKey"
                - "iam:DeleteServerCertificate"
                - "iam:DeleteSigningCertificate"
                - "iam:DeleteUser"
                - "iam:DeleteUserPolicy"
                - "iam:DeleteVirtualMFADevice"
                - "iam:DetachGroupPolicy"
                - "iam:DetachUserPolicy"
                - "iam:EnableMFADevice"
                - "iam:PutGroupPolicy"
                - "iam:PutUserPolicy"
                - "iam:RemoveClientIDFromOpenIDConnectProvider"
                - "iam:RemoveUserFromGroup"
                - "iam:ResyncMFADevice"
                - "iam:SetDefaultPolicyVersion"
                - "iam:UpdateAccessKey"
                - "iam:UpdateAccountPasswordPolicy"
                - "iam:UpdateAssumeRolePolicy"
                - "iam:UpdateGroup"
                - "iam:UpdateLoginProfile"
                - "iam:UpdateOpenIDConnectProviderThumbprint"
                - "iam:UpdateSAMLProvider"
                - "iam:UpdateSSHPublicKey"
                - "iam:UpdateServerCertificate"
                - "iam:UpdateSigningCertificate"
                - "iam:UpdateUser"
                - "iam:UploadSSHPublicKey"
                - "iam:UploadServerCertificate"
                - "iam:UploadSigningCertificate"
              Resource: "*"
            -
              Effect: "Allow"
              Action:
                - "acm:List*"
                - "autoscaling:*"
                - "aws-portal:View*"
                - "cloudformation:*"
                - "cloudfront:*"
                - "cloudsearch:*"
                - "cloudtrail:DescribeTrails"
                - "cloudtrail:GetTrailStatus"
                - "cloudtrail:LookupEvents"
                - "cloudtrail:StartLogging"
                - "cloudwatch:*"
                - "config:*"
                - "logs:*"
                - "iam:*"
                - "devicefarm:*"
                - "dynamodb:*"
                - "ec2:*"
                - "elasticfilesystem:*"
                - "elasticloadbalancing:*"
                - "elastictranscoder:*"
                - "elasticache:*"
                - "es:*"
                - "glacier:*"
                - "kms:*"
                - "rds:*"
                - "s3:*"
                - "sts:*"
                - "support:*"
                - "redshift:*"
                - "route53:*"
                - "route53domains:*"
                - "sns:*"
                - "sqs:*"
                - "datapipeline:*"
                - "elasticmapreduce:*"
                - "kinesis:*"
                - "machinelearning:*"
                - "apigateway:*"
                - "ses:*"
                - "sdb:*"
                - "trustedadvisor:*"
              Resource: "*"
